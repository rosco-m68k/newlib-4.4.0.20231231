# Copyright (c) 2024 The Really Old-School Company Ltd
#
# The authors hereby grant permission to use, copy, modify, distribute,
# and license this software and its documentation for any purpose, provided
# that existing copyright notices are retained in all copies and that this
# notice is included verbatim in any distributions. No written agreement,
# license, or royalty fee is required for any of the authorized uses.
# Modifications to this software may be copyrighted by their authors
# and need not follow the licensing terms described here, provided that
# the new terms are clearly indicated on the first page of each file where
# they apply.

# Makefile for libgloss/rosco. This is the board support for the rosco_m68k.

VPATH = @srcdir@ @srcdir@/..
srcdir = @srcdir@
objdir = .
srcroot = $(srcdir)/../..
objroot = $(objdir)/../..

prefix = @prefix@
exec_prefix = @exec_prefix@

host_alias = @host_alias@
target_alias = @target_alias@

bindir = @bindir@
libdir = @libdir@
tooldir = $(exec_prefix)/$(target_alias)

# Multilib support variables.
# TOP is used instead of MULTI{BUILD,SRC}TOP.
MULTIDIRS =
MULTISUBDIR =
MULTIDO = true
MULTICLEAN = true

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@

SHELL = /bin/sh

mkinstalldirs = $(SHELL) $(srcroot)/mkinstalldirs

CC = @CC@

AS = @AS@
AR = @AR@
LD = @LD@
RANLIB = @RANLIB@
VASM=vasmm68k_mot
AR_FLAGS = rc
VASM_FLAGS=-Felf -m68000 -quiet

OBJDUMP = `if [ -f ${objroot}/../binutils/objdump ] ; \
	then echo ${objroot}/../binutils/objdump ; \
	else t='$(program_transform_name)'; echo objdump | sed -e $$t ; fi`
OBJCOPY = `if [ -f ${objroot}/../binutils/objcopy ] ; \
	then echo ${objroot}/../binutils/objcopy ; \
	else t='$(program_transform_name)'; echo objcopy | sed -e $$t ; fi`

BSP=	librosco.a

SCRIPTS = hugerom_rosco_m68k_program.ld

OBJS =  syscalls.o machine.o

CRT0 = crt0.o

#### Host specific Makefile fragment comes in here.
@host_makefile_frag@

all: $(CRT0) $(BSP)

crt0.o: $(srcdir)/crt0.asm
	$(VASM) $(VASM_FLAGS) -o $@ $<

${BSP}: $(OBJS)
	${AR} ${ARFLAGS} $@ $(OBJS)
	${RANLIB} $@

syscalls.o: $(srcdir)/syscalls.c
	$(CC) $(CFLAGS_FOR_TARGET) -O2 $(INCLUDES) -c $(CFLAGS) $<

machine.o: $(srcdir)/machine.asm
	$(VASM) $(VASM_FLAGS) -o $@ $<

install: $($(CPU)_INSTALL)
	${mkinstalldirs} ${DESTDIR}${tooldir}/lib${MULTISUBDIR}
	for c in $(CRT0); do \
	  $(INSTALL_DATA) $$c $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}/$$c ; \
	done; 
	for c in $(SCRIPTS); do \
	  $(INSTALL_DATA) $(srcdir)/$$c $(DESTDIR)$(tooldir)/lib/$$c ; \
	done;
	@for bsp in ${BSP}; do\
	 $(INSTALL_PROGRAM) $${bsp} $(DESTDIR)$(tooldir)/lib${MULTISUBDIR}; \
	done

clean mostlyclean:
	rm -f *.o *.a

distclean maintainer-clean realclean: clean
	rm -f Makefile

.PHONY: info dvi doc install-info clean-info
info doc dvi:
install-info:
clean-info:

Makefile: Makefile.in ../config.status
	cd .. && $(SHELL) config.status
